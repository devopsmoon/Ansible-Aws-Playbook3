- name: this playbook will create the vpc in aws
  hosts: localhost
  become: true
  connection: local
  gather_facts: false
  tasks:
    - name: importing the variables
      include_vars: vars/vpc_setup

    - name: creating the vpc setup
      ec2_vpc_net:
        name: "{{vpc_name}}"
        region: "{{region}}"
        state: present
        cidr_block: "{{vpccidr}}"
        tenancy: default
        dns_support: true
        dns_hostnames: true
        tags:
          Name: vprofile-vpc
      register: vpcout

    - debug:
        var: vpcout

    - name: creating the public subnet1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        cidr: "{{pubsub1cidr}}"
        map_public: yes
        tags:
          Name: vprofile-pubsubnet1
      register: pubsub1_out

    - name: creating the public subnet2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        cidr: "{{pubsub2cidr}}"
        map_public: yes
        tags:
          Name: vprofile-pubsubnet2
      register: pubsub2_out

    - name: creating the public subnet3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        cidr: "{{pubsub3cidr}}"
        map_public: yes
        tags:
          Name: vprofile-pubsubnet3
      register: pubsub3_out

    - name: creating the private subnet1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        cidr: "{{prisub1cidr}}"
        tags:
          Name: vprofile-prisubnet1
      register: prisub1_out

    - name: creating the private subnet2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        cidr: "{{prisub2cidr}}"
        tags:
          Name: vprofile-prisubnet2
      register: prisub2_out

    - name: creating the private subnet3
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        cidr: "{{prisub3cidr}}"
        tags:
          Name: vprofile-prisubnet3
      register: prisub3_out

    - name: creating the internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        tags:
          Name: vprofile-IGW
      register: igw_out

    - name: creating the route table in public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        tags:
          Name: vprofile-pubRT
        subnets:
          - "{{pubsub1cidr.subnet.id}}"
          - "{{pubsub2cidr.subnet.id}}"
          - "{{pubsub3cidr.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out

    - debug:
        var: pubRT_out

    - name: creating the nat gateway and allocate the EIP
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{pubsub1_out.subnet.id}}"
        region: "{{region}}"
        wait: true
        if_exist_do_not_create: true
      register: natgw_out

    - name: creating the route table in private subnets
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        state: present
        region: "{{region}}"
        tags:
          Name: vprofile-priRT
        subnets:
          - "{{prisub1cidr.subnet.id}}"
          - "{{prisub2cidr.subnet.id}}"
          - "{{prisub3cidr.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{natgw_out.nat_gateway_id}}"
      register: priRT_out

    - debug:
        var: "{{item}}"
      loop:
        - vpcout_vpc_id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - prisub1_out.subnet.id
        - prisub2_out.subnet.id
        - prisub3_out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - natgw_out.nat_gateway_id
        - priRT_out.route_table.id
    - set_fact:
        vpcid: "{{vpcout.vpc.id}}"
        pubsub1id: "{{pubsub1_out.subnet.id}}"
        pubsub2id: "{{pubsub2_out.subnet.id}}"
        pubsub3id: "{{pubsub3_out.subnet.id}}"
        prisub1id: "{{prisub1_out.subnet.id}}"
        prisub2id: "{{prisub2_out.subnet.id}}"
        prisub3id: "{{prisub3_out.subnet.id}}"
        igwid: "{{igw_out.gateway_id}}"
        pubRTid: "pubRT_out.route_table.id}}"
        natgwid: "{{natgw_out.nat_gateway_id}}"
        priRTid: "{{priRT_out.route_table.id}}"
        cacheable: yes


